# Filename: .env.example

# Application Environment
NODE_ENV=development

# JWT Secret
JWT_SECRET=your-super-secret-key-for-jwt

# PostgreSQL Database
POSTGRES_USER=skincare_user
POSTGRES_PASSWORD=strong_password
POSTGRES_DB=skincare_db
POSTGRES_HOST=postgres-db # Service name in docker-compose
POSTGRES_PORT=5432

# MongoDB Database
MONGO_ROOT_USER=admin
MONGO_ROOT_PASSWORD=admin_password
MONGO_HOST=mongo-db # Service name in docker-compose
MONGO_PORT=27017
MONGO_DB_NAME=products_db

# Redis Cache
REDIS_HOST=redis-cache # Service name in docker-compose
REDIS_PORT=6379

# Microservice Endpoints (for API Gateway)
# Ports here match the internal container ports
AUTH_SERVICE_URL=http://auth-service:3001
USER_SERVICE_URL=http://user-service:3002
PRODUCT_SERVICE_URL=http://product-service:3003
EXPERT_SERVICE_URL=http://expert-service:3004
AI_SERVICE_URL=http://ai-service:8000
RECOMMENDATION_SERVICE_URL=http://recommendation-service:8001

# GCP Cloud Storage (for AI Service, User Service)
GCP_PROJECT_ID=your-gcp-project-id
GCS_BUCKET_NAME=ai-skincare-platform-bucket
# Note: For local dev, you might use a local storage emulator or mock service.
# For simplicity, we'll assume services handle missing credentials gracefully in dev mode.